services:
  open-webui:
    # https://github.com/open-webui/open-webui/releases
    image: ghcr.io/open-webui/open-webui:v0.5.7
    depends_on:
      - open-webui-db
    env_file:
      - docker.env
    ports:
      - "3050:8080"
    environment:
      # https://docs.openwebui.com/getting-started/advanced-topics/env-configuration
      BYPASS_MODEL_ACCESS_CONTROL: True
      DEFAULT_USER_ROLE: user
      WEBUI_AUTH: 0
      #      OPENAI_API_BASE_URL: 'https://api.openai.com/v1'
      GLOBAL_LOG_LEVEL: debug
      SRC_LOG_LEVELS: '{"SOCKET": "DEBUG", "MAIN": "DEBUG", "MODELS": "DEBUG", "OPENAI": "DEBUG", "OAUTH": "DEBUG", "CONFIG": "DEBUG", "DB": "DEBUG"}'
      #      OPENAI_API_BASE_URL: 'http://dev:5000/api/v1'
      # Supports balanced OpenAI base API URLs, semicolon-separated.
      OPENAI_API_BASE_URL: 'http://dev:5000/api/v1'
      CORS_ALLOW_ORIGIN: '*'
      OPENAI_API_KEY: 'bedrock'
      #      DEFAULT_MODELS: "General Purpose"
      DEFAULT_MODELS: "us.anthropic.claude-3-5-sonnet-20241022-v2:0"
      ENABLE_MODEL_FILTER: True
      #      MODEL_FILTER_LIST: "anthropic.claude-3-5-sonnet-20240620-v1:0"
      WEBUI_DB_HOST: "open-webui-db"
      DATABASE_URL: "postgresql://myapp_user:myapp_pass@open-webui-db:5431/myapp_db"
      ENABLE_OLLAMA_API: False
      ENABLE_EVALUATION_ARENA_MODELS: False
      #      TITLE_GENERATION_PROMPT_TEMPLATE: "What do you want to know about your health?"
      ENABLE_IMAGE_GENERATION: True
      IMAGE_GENERATION_ENGINE: "openai"
      IMAGES_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      IMAGES_OPENAI_API_KEY: "bedrock"
      IMAGE_GENERATION_MODEL: "amazon.titan-image-generator-v2:0"
      LOAD_PROMPT_FROM_LANGCHAIN_HUB: False
      WEBUI_FAVICON_URL: "http://localhost:5050/favicon.png"
      WEBUI_NAME: "b.ai"
      WEBUI_BANNERS: '[{"id": "1", "type":"info", "title":"Welcome to b.well AI", "content":"Welcome to b.well AI! **[Click here for AI Resource Guide](https://icanbwell.atlassian.net/wiki/spaces/BRG/pages/5092442117/AI+Resource+Guide)**", "dismissible": false, "timestamp": 100000},{"id": "2", "type":"info", "title":"Help", "content":"Type \"help\" if you need help.  Reload page if you do not get results.  Use \"Prompt Helper\" model to create better prompts.", "dismissible": false, "timestamp": 100000}]'
      ENABLE_FORWARD_USER_INFO_HEADERS: True
      ENABLE_FORWARD_OAUTH_TOKEN: True
      # Speech to text settings
      AUDIO_STT_ENGINE: "openai"
      AUDIO_STT_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      # text to speech settings
      AUDIO_TTS_ENGINE: "openai"
      AUDIO_TTS_OPENAI_API_BASE_URL: "http://localhost:5050/api/v1"
      AUDIO_TTS_VOICE: "alloy"
      SAFE_MODE: True
      ENABLE_WEBSOCKET_SUPPORT: True
      # RAG requires downloading embedding models.  On slow connections, this can timeout docker compose
      RAG_EMBEDDING_MODEL: ""
      # curl --silent --fail http://localhost:8081/health | jq -ne 'input.status == true' || exit 1
      WEBUI_SECRET_KEY: "${WEBUI_SECRET_KEY:-$(openssl rand -hex 32)}"
    networks:
      - web
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail http://localhost:8080/health | jq -ne 'input.status == true' || exit 1" ]
      interval: 5s
      timeout: 5s
      start_period: 10s
      retries: 20

  open-webui-db:
    image: postgres:13
    environment:
      - POSTGRES_DB=myapp_db
      - POSTGRES_USER=myapp_user
      - POSTGRES_PASSWORD=myapp_pass
    ports:
      - "5431:5431"
    command: -p 5431
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myapp_user -d myapp_db -p 5431" ]
      interval: 3s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:
    driver: local

networks:
  web:
    driver: bridge
